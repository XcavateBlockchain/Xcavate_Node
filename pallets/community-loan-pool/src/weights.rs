
//! Autogenerated weights for `pallet_community_loan_pool`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-19, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `LAPTOP-DFFNONK6`, CPU: `11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: 1024

// Executed Command:
// ./target/release/node-template
// benchmark
// pallet
// --chain
// dev
// --pallet
// pallet_community_loan_pool
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// pallets/community-loan-pool/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions needed for pallet_community_loan_pool.
pub trait WeightInfo {
	fn propose() -> Weight;
	fn add_committee_member() -> Weight;
	fn set_milestones() -> Weight;
	fn vote_on_proposal() -> Weight;
	fn withdraw() -> Weight;
	fn repay() -> Weight;
	fn propose_milestone() -> Weight;
	fn vote_on_milestone_proposal() -> Weight;
	fn propose_deletion() -> Weight;
	fn vote_on_deletion_proposal() -> Weight;
}

/// Weight functions for `pallet_community_loan_pool`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `CommunityLoanPool::ReservedLoanAmount` (r:1 w:0)
	/// Proof: `CommunityLoanPool::ReservedLoanAmount` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::ProposalCount` (r:1 w:1)
	/// Proof: `CommunityLoanPool::ProposalCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::RoundsExpiring` (r:1 w:1)
	/// Proof: `CommunityLoanPool::RoundsExpiring` (`max_values`: None, `max_size`: Some(40022), added: 42497, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::OngoingVotes` (r:0 w:1)
	/// Proof: `CommunityLoanPool::OngoingVotes` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::Proposals` (r:0 w:1)
	/// Proof: `CommunityLoanPool::Proposals` (`max_values`: None, `max_size`: Some(131), added: 2606, mode: `MaxEncodedLen`)
	fn propose() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `313`
		//  Estimated: `43487`
		// Minimum execution time: 41_939_000 picoseconds.
		Weight::from_parts(43_852_000, 0)
			.saturating_add(Weight::from_parts(0, 43487))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `CommunityLoanPool::VotingCommittee` (r:1 w:1)
	/// Proof: `CommunityLoanPool::VotingCommittee` (`max_values`: Some(1), `max_size`: Some(320002), added: 320497, mode: `MaxEncodedLen`)
	fn add_committee_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `109`
		//  Estimated: `321487`
		// Minimum execution time: 13_735_000 picoseconds.
		Weight::from_parts(14_187_000, 0)
			.saturating_add(Weight::from_parts(0, 321487))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `CommunityLoanPool::VotingCommittee` (r:1 w:0)
	/// Proof: `CommunityLoanPool::VotingCommittee` (`max_values`: Some(1), `max_size`: Some(320002), added: 320497, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::Proposals` (r:1 w:1)
	/// Proof: `CommunityLoanPool::Proposals` (`max_values`: None, `max_size`: Some(131), added: 2606, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::OngoingVotes` (r:1 w:1)
	/// Proof: `CommunityLoanPool::OngoingVotes` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::UserVotes` (r:1 w:1)
	/// Proof: `CommunityLoanPool::UserVotes` (`max_values`: None, `max_size`: Some(45), added: 2520, mode: `MaxEncodedLen`)
	fn set_milestones() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `420`
		//  Estimated: `321487`
		// Minimum execution time: 32_291_000 picoseconds.
		Weight::from_parts(37_497_000, 0)
			.saturating_add(Weight::from_parts(0, 321487))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `CommunityLoanPool::VotingCommittee` (r:1 w:0)
	/// Proof: `CommunityLoanPool::VotingCommittee` (`max_values`: Some(1), `max_size`: Some(320002), added: 320497, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::OngoingVotes` (r:1 w:1)
	/// Proof: `CommunityLoanPool::OngoingVotes` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::UserVotes` (r:1 w:1)
	/// Proof: `CommunityLoanPool::UserVotes` (`max_values`: None, `max_size`: Some(45), added: 2520, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::Proposals` (r:1 w:0)
	/// Proof: `CommunityLoanPool::Proposals` (`max_values`: None, `max_size`: Some(131), added: 2606, mode: `MaxEncodedLen`)
	fn vote_on_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `532`
		//  Estimated: `321487`
		// Minimum execution time: 27_147_000 picoseconds.
		Weight::from_parts(31_513_000, 0)
			.saturating_add(Weight::from_parts(0, 321487))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `CommunityLoanPool::Loans` (r:1 w:1)
	/// Proof: `CommunityLoanPool::Loans` (`max_values`: None, `max_size`: Some(144), added: 2619, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::ReservedLoanAmount` (r:1 w:1)
	/// Proof: `CommunityLoanPool::ReservedLoanAmount` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	fn withdraw() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `598`
		//  Estimated: `6196`
		// Minimum execution time: 73_077_000 picoseconds.
		Weight::from_parts(77_224_000, 0)
			.saturating_add(Weight::from_parts(0, 6196))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `CommunityLoanPool::Loans` (r:1 w:1)
	/// Proof: `CommunityLoanPool::Loans` (`max_values`: None, `max_size`: Some(144), added: 2619, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::TotalLoanAmount` (r:1 w:1)
	/// Proof: `CommunityLoanPool::TotalLoanAmount` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	fn repay() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `563`
		//  Estimated: `3609`
		// Minimum execution time: 29_857_000 picoseconds.
		Weight::from_parts(37_368_000, 0)
			.saturating_add(Weight::from_parts(0, 3609))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `CommunityLoanPool::Loans` (r:1 w:0)
	/// Proof: `CommunityLoanPool::Loans` (`max_values`: None, `max_size`: Some(144), added: 2619, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::MilestoneProposalCount` (r:1 w:1)
	/// Proof: `CommunityLoanPool::MilestoneProposalCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::MilestoneRoundsExpiring` (r:1 w:1)
	/// Proof: `CommunityLoanPool::MilestoneRoundsExpiring` (`max_values`: None, `max_size`: Some(40022), added: 42497, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::MilestoneInfo` (r:0 w:1)
	/// Proof: `CommunityLoanPool::MilestoneInfo` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::OngoingMilestoneVotes` (r:0 w:1)
	/// Proof: `CommunityLoanPool::OngoingMilestoneVotes` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::MilestoneProposals` (r:0 w:1)
	/// Proof: `CommunityLoanPool::MilestoneProposals` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	fn propose_milestone() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `563`
		//  Estimated: `43487`
		// Minimum execution time: 48_293_000 picoseconds.
		Weight::from_parts(53_985_000, 0)
			.saturating_add(Weight::from_parts(0, 43487))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: `CommunityLoanPool::VotingCommittee` (r:1 w:0)
	/// Proof: `CommunityLoanPool::VotingCommittee` (`max_values`: Some(1), `max_size`: Some(320002), added: 320497, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::OngoingMilestoneVotes` (r:1 w:1)
	/// Proof: `CommunityLoanPool::OngoingMilestoneVotes` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::UserMilestoneVotes` (r:1 w:1)
	/// Proof: `CommunityLoanPool::UserMilestoneVotes` (`max_values`: None, `max_size`: Some(45), added: 2520, mode: `MaxEncodedLen`)
	fn vote_on_milestone_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `516`
		//  Estimated: `321487`
		// Minimum execution time: 23_687_000 picoseconds.
		Weight::from_parts(25_511_000, 0)
			.saturating_add(Weight::from_parts(0, 321487))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `CommunityLoanPool::Loans` (r:1 w:1)
	/// Proof: `CommunityLoanPool::Loans` (`max_values`: None, `max_size`: Some(144), added: 2619, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::DeletionProposalCount` (r:1 w:1)
	/// Proof: `CommunityLoanPool::DeletionProposalCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::DeletionRoundsExpiring` (r:1 w:1)
	/// Proof: `CommunityLoanPool::DeletionRoundsExpiring` (`max_values`: None, `max_size`: Some(40022), added: 42497, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::DeletionProposals` (r:0 w:1)
	/// Proof: `CommunityLoanPool::DeletionProposals` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::OngoingDeletionVotes` (r:0 w:1)
	/// Proof: `CommunityLoanPool::OngoingDeletionVotes` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	fn propose_deletion() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `423`
		//  Estimated: `43487`
		// Minimum execution time: 28_597_000 picoseconds.
		Weight::from_parts(30_584_000, 0)
			.saturating_add(Weight::from_parts(0, 43487))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `CommunityLoanPool::VotingCommittee` (r:1 w:0)
	/// Proof: `CommunityLoanPool::VotingCommittee` (`max_values`: Some(1), `max_size`: Some(320002), added: 320497, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::OngoingDeletionVotes` (r:1 w:1)
	/// Proof: `CommunityLoanPool::OngoingDeletionVotes` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `CommunityLoanPool::UserDeletionVotes` (r:1 w:1)
	/// Proof: `CommunityLoanPool::UserDeletionVotes` (`max_values`: None, `max_size`: Some(45), added: 2520, mode: `MaxEncodedLen`)
	fn vote_on_deletion_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `506`
		//  Estimated: `321487`
		// Minimum execution time: 24_422_000 picoseconds.
		Weight::from_parts(26_616_000, 0)
			.saturating_add(Weight::from_parts(0, 321487))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
}
