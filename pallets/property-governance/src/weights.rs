
//! Autogenerated weights for `pallet_property_governance`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-07-15, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `recrafter-Legion-5-16IRX9`, CPU: `Intel(R) Core(TM) i7-14650HX`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: 1024

// Executed Command:
// ./target/release/node-template
// benchmark
// pallet
// --chain
// dev
// --pallet
// pallet_property_governance
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// pallets/property-governance/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

pub trait WeightInfo {
	fn propose() -> Weight;
	fn sell_property() -> Weight;
	fn inquery_against_letting_agent() -> Weight;
	fn vote_on_proposal() -> Weight;
	fn vote_on_letting_agent_inquery() -> Weight;
}

/// Weight functions for `pallet_property_governance`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `PropertyManagement::LettingStorage` (r:1 w:0)
	/// Proof: `PropertyManagement::LettingStorage` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PropertyManagement::PropertyReserve` (r:1 w:1)
	/// Proof: `PropertyManagement::PropertyReserve` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn propose() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `430`
		//  Estimated: `3593`
		// Minimum execution time: 92_270_000 picoseconds.
		Weight::from_parts(94_901_000, 0)
			.saturating_add(Weight::from_parts(0, 3593))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `NftMarketplace::PropertyOwner` (r:1 w:0)
	/// Proof: `NftMarketplace::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `PropertyGovernance::ProposalCount` (r:1 w:0)
	/// Proof: `PropertyGovernance::ProposalCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `PropertyGovernance::SellPropertyRoundsExpiring` (r:1 w:1)
	/// Proof: `PropertyGovernance::SellPropertyRoundsExpiring` (`max_values`: None, `max_size`: Some(422), added: 2897, mode: `MaxEncodedLen`)
	/// Storage: `PropertyGovernance::OngoingVotes` (r:0 w:1)
	/// Proof: `PropertyGovernance::OngoingVotes` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `PropertyGovernance::SellProposals` (r:0 w:1)
	/// Proof: `PropertyGovernance::SellProposals` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	fn sell_property() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `490`
		//  Estimated: `11487`
		// Minimum execution time: 37_424_000 picoseconds.
		Weight::from_parts(38_478_000, 0)
			.saturating_add(Weight::from_parts(0, 11487))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `NftMarketplace::PropertyOwner` (r:1 w:0)
	/// Proof: `NftMarketplace::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `PropertyGovernance::InqueryCount` (r:1 w:0)
	/// Proof: `PropertyGovernance::InqueryCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `PropertyGovernance::InqueryRoundsExpiring` (r:1 w:1)
	/// Proof: `PropertyGovernance::InqueryRoundsExpiring` (`max_values`: None, `max_size`: Some(422), added: 2897, mode: `MaxEncodedLen`)
	/// Storage: `PropertyGovernance::Inqueries` (r:0 w:1)
	/// Proof: `PropertyGovernance::Inqueries` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	/// Storage: `PropertyGovernance::OngoingInqueryVotes` (r:0 w:1)
	/// Proof: `PropertyGovernance::OngoingInqueryVotes` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	fn inquery_against_letting_agent() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `490`
		//  Estimated: `11487`
		// Minimum execution time: 36_095_000 picoseconds.
		Weight::from_parts(37_824_000, 0)
			.saturating_add(Weight::from_parts(0, 11487))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `PropertyGovernance::Proposals` (r:1 w:0)
	/// Proof: `PropertyGovernance::Proposals` (`max_values`: None, `max_size`: Some(5078), added: 7553, mode: `MaxEncodedLen`)
	/// Storage: `NftMarketplace::PropertyOwner` (r:1 w:0)
	/// Proof: `NftMarketplace::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `PropertyGovernance::ProposalVoter` (r:1 w:1)
	/// Proof: `PropertyGovernance::ProposalVoter` (`max_values`: None, `max_size`: Some(3222), added: 5697, mode: `MaxEncodedLen`)
	/// Storage: `NftMarketplace::PropertyOwnerToken` (r:1 w:0)
	/// Proof: `NftMarketplace::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `PropertyGovernance::OngoingVotes` (r:1 w:1)
	/// Proof: `PropertyGovernance::OngoingVotes` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	fn vote_on_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5766`
		//  Estimated: `11487`
		// Minimum execution time: 60_132_000 picoseconds.
		Weight::from_parts(62_870_000, 0)
			.saturating_add(Weight::from_parts(0, 11487))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `PropertyGovernance::Inqueries` (r:1 w:0)
	/// Proof: `PropertyGovernance::Inqueries` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	/// Storage: `NftMarketplace::PropertyOwner` (r:1 w:0)
	/// Proof: `NftMarketplace::PropertyOwner` (`max_values`: None, `max_size`: Some(8022), added: 10497, mode: `MaxEncodedLen`)
	/// Storage: `PropertyGovernance::InqueryVoter` (r:1 w:1)
	/// Proof: `PropertyGovernance::InqueryVoter` (`max_values`: None, `max_size`: Some(3222), added: 5697, mode: `MaxEncodedLen`)
	/// Storage: `NftMarketplace::PropertyOwnerToken` (r:1 w:0)
	/// Proof: `NftMarketplace::PropertyOwnerToken` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
	/// Storage: `PropertyGovernance::OngoingInqueryVotes` (r:1 w:1)
	/// Proof: `PropertyGovernance::OngoingInqueryVotes` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	fn vote_on_letting_agent_inquery() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `721`
		//  Estimated: `11487`
		// Minimum execution time: 52_299_000 picoseconds.
		Weight::from_parts(54_748_000, 0)
			.saturating_add(Weight::from_parts(0, 11487))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(2))
	}
}
